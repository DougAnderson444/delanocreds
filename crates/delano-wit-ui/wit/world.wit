package component:delano-wit-ui;

interface context-types {

  /// The type of the app
  record page {
    name: string,
    version: string,
    description: string,
  }

  record input {
    issue: issue-context,
  }

  record issue-context {
    attributes: list<list<u8>>
  }

  record everything {
    page: option<page>,
    issue: option<issue-context>
  }

  /// The type of context provided
  variant context {
    all-content(everything),
    // issuing(issue-context)
  }

}

interface wurbo-types {
  // Details required in order to add an event listener to an element
  record listen-details {
    selector: string,
    ty: string,
  }
}

/// An interface that provides an event listener to make the component interactive.
interface wurbo-in {

  use wurbo-types.{listen-details};

  // Add an event listener to the given element
  addeventlistener: func(details: listen-details);

}

interface wurbo-out {

  use context-types.{context};

  // renders the initial Web component with the given data
  render: func(ctx: context) -> result<string, string>;

  // activate listening 
  activate: func();
}

/// An example world for the component to target.
world delanocreds-wit-ui {

    /// Import the wallet interface
    import delano:wallet/actions@0.1.0;
    import wurbo-in;

    export wurbo-out;
}
